services:
  # BE
  api:
    container_name: next-go-project-backend
    build:
      context: ./backend
      dockerfile: Dockerfile-dev
    volumes:
      - ./backend:/app
    ports:
      - ${BE_SERVER_PORT}:${BE_SERVER_PORT}
    env_file:
      - .env
    networks:
      - next-go-project-network
  db:
    container_name: next-go-project-db
    image: postgres:14.5
    tty: true
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - ./backend/persist/postgres:/var/lib/postgresql/data
      - ./backend/DDL:/docker-entrypoint-initdb.d
    networks:
      - next-go-project-network
  db-test:
    container_name: next-go-project-db-test
    image: postgres:14.5
    tty: true
    ports:
      - 15432:${TEST_POSTGRES_PORT}
    environment:
      POSTGRES_HOST: ${TEST_POSTGRES_HOST}
      POSTGRES_PORT: ${TEST_POSTGRES_PORT}
      POSTGRES_USER: ${TEST_POSTGRES_USER}
      POSTGRES_PASSWORD: ${TEST_POSTGRES_PASSWORD}
      POSTGRES_DB: ${TEST_POSTGRES_DATABASE}
    volumes:
      - ./backend/persist/postgres-test:/var/lib/postgresql/data
      - ./backend/DDL:/docker-entrypoint-initdb.d
    networks:
      - next-go-project-network
  pgadmin:
    container_name: next-go-project-pgadmin
    image: dpage/pgadmin4
    ports:
      - 5050:80
    volumes:
      - ./persist/pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - db
    networks:
      - next-go-project-network
  swagger-ui:
    container_name: next-go-project-swagger-ui
    image: swaggerapi/swagger-ui:latest
    ports:
      - "8002:8080"
    volumes:
      - ./backend/swagger/src/swagger.yaml:/swagger.yaml
    environment:
      SWAGGER_JSON: /swagger.yaml
    networks:
      - next-go-project-network
  redoc:
    container_name: next-go-project-redoc
    image: redocly/redoc:latest
    ports:
      - "8001:80"
    volumes:
      - ./backend/swagger/src/swagger.yaml:/usr/share/nginx/html/swagger.yaml
    environment:
      - SPEC_URL=swagger.yaml
    networks:
      - next-go-project-network
  # localstack:
  #   container_name: next-go-project-localstack
  #   build:
  #     context: ./backend
  #     dockerfile: docker/localstack/Dockerfile
  #   environment:
  #     - SERVICES=s3
  #     - DEBUG=1
  #     - DOCKER_SOCK=/var/run/docker.sock
  #     - DATA_DIR=/tmp/localstack/data
  #     - DEFAULT_REGION=ap-northeast-1
  #   volumes:
  #     - ./backend/docker/localstack:/docker-entrypoint-initaws.d:ro
  #     - ./backend/persist/localstack/data:/var/lib/localstack/
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   ports:
  #     - 4566:4566
  #   networks:
  #     - next-go-project-network
  # FE
  next:
    container_name: next-go-project-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile-dev
    ports:
      - 3000:3000
      - 24678:24678
    volumes:
      - ./frontend:/app/src
      - /app/src/node_modules
networks:
  next-go-project-network:
    driver: bridge
